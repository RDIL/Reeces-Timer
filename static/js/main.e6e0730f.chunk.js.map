{"version":3,"sources":["Utilities.js","components/LoadableSound.js","components/MainContainer.js","index.js","App.js"],"names":["buildYouTubeEmbedUrl","data","params","props","show","width","height","src","frameBorder","allow","title","hidden","vids","ids","start_ats","listOfVideos","key","push","MenuItem","value","secondsCountNumber","React","useState","isTimerRunning","setTimerIsRunning","secondsValue","setSecondsValue","minutesValue","setMinutesValue","sound","setSound","useEffect","setTimeout","Paper","style","padding","margin","Typography","variant","hMessage","Grid","container","justify","alignItems","className","styleRefs","small","Slider","onChange","event","newValue","max","Input","input","target","Number","onBlur","inputProps","step","min","type","autoComplete","Select","Button","startIcon","onClick","disabled","color","LoadableSound","ReactDOM","render","holidayMessage","classes","createMuiTheme","palette","primary","red","secondary","green","makeStyles","theme","flexGrow","component","AppBar","position","Toolbar","MainContainer","document","getElementById"],"mappings":"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","file":"static/js/main.e6e0730f.chunk.js","sourcesContent":["/**\n * Copyright 2019-present Reece Dunham\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const buildYouTubeEmbedUrl = data => {\n    const params = `controls=0&amp;autoplay=1${\n        data[1] != null ? `&amp;start=${data[1]}` : \"\"\n    }`\n    return `https://www.youtube.com/embed/${data[0]}?${params}`\n}\n\nexport const prettySecondsValue = secondsCountNumber => {\n    return secondsCountNumber < 10\n        ? `0${secondsCountNumber}`\n        : secondsCountNumber\n}\n","/**\n * Copyright 2019-present Reece Dunham\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { buildYouTubeEmbedUrl } from \"../Utilities\"\n\nexport default props => {\n    // eslint-disable-next-line\n    return props.show && props.data[0] != \"\" ? (\n        <iframe\n            width=\"0\"\n            height=\"0\"\n            src={buildYouTubeEmbedUrl(props.data)}\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            title=\"sound\"\n        />\n    ) : (\n        <div hidden />\n    )\n}\n","/**\n * Copyright 2019-present Reece Dunham\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Slider from \"@material-ui/core/Slider\"\nimport Input from \"@material-ui/core/Input\"\nimport Button from \"@material-ui/core/Button\"\nimport Clock from \"@material-ui/icons/Alarm\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { prettySecondsValue } from \"../Utilities\"\nimport LoadableSound from \"./LoadableSound\"\n\nconst vids = [\"Xylophone Notes\", \"Birds Chirping\", \"Bell\"]\nconst ids = [\"258OTDCrHg0\", \"54n9E_LwQvQ\", \"hrqIq5hBFSw\"]\nconst start_ats = [null, null, \"6\"]\nlet listOfVideos = []\n\nfor (let key in vids) {\n    listOfVideos.push(\n        <MenuItem value={[ids[key], start_ats[key]]}>{vids[key]}</MenuItem>\n    )\n}\n\nexport default props => {\n    const [isTimerRunning, setTimerIsRunning] = React.useState(false)\n\n    const [secondsValue, setSecondsValue] = React.useState(0)\n    const [minutesValue, setMinutesValue] = React.useState(10)\n\n    const [sound, setSound] = React.useState(\"\")\n\n    const handleSecondSliderChange = (event, newValue) => {\n        setSecondsValue(newValue)\n    }\n    const handleSecondInputChange = event => {\n        setSecondsValue(\n            event.target.value === \"\" ? \"\" : Number(event.target.value)\n        )\n    }\n\n    const handleMinuteInputChange = event => {\n        setMinutesValue(\n            event.target.value === \"\" ? \"\" : Number(event.target.value)\n        )\n    }\n    const handleMinuteSliderChange = (event, newValue) => {\n        setMinutesValue(newValue)\n    }\n\n    const handleSoundChange = event => setSound(event.target.value)\n\n    const toggleRunStatus = event => setTimerIsRunning(!isTimerRunning)\n\n    const handleBlur = () => {\n        if (secondsValue < 0 || secondsValue > 60) {\n            setSecondsValue(0)\n        }\n    }\n\n    const handleMBlur = () => {\n        if (minutesValue < 0 || minutesValue > 60) {\n            setMinutesValue(0)\n        }\n    }\n\n    React.useEffect(() => {\n        setTimeout(() => {\n            // the component constantly re-renders, and so every\n            // time it rerenders on the second, it runs this\n            if (isTimerRunning) {\n                if (secondsValue < 1) {\n                    if (!minutesValue < 1) {\n                        setSecondsValue(59)\n                        setMinutesValue(minutesValue - 1)\n                    }\n                } else {\n                    setSecondsValue(secondsValue - 1)\n                }\n            }\n\n            return () => {}\n        }, 1000)\n    })\n\n    return (\n        <Paper\n            style={{\n                padding: \"35px\",\n                margin: \"15px\"\n            }}\n        >\n            <Typography variant=\"h2\">\n                {!isTimerRunning\n                    ? \"Timer\"\n                    : `${minutesValue}:${prettySecondsValue(secondsValue)}`}\n            </Typography>\n            {props.hMessage}\n            <br />\n            <div>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                    <div\n                        hidden={isTimerRunning}\n                        className={props.styleRefs.small}\n                    >\n                        <br />\n                        <Typography variant=\"overline\">Minutes</Typography>\n                        <Slider\n                            value={\n                                typeof minutesValue === \"number\"\n                                    ? minutesValue\n                                    : 0\n                            }\n                            onChange={handleMinuteSliderChange}\n                            max=\"60\"\n                        />\n                        <Input\n                            className={props.styleRefs.input}\n                            value={minutesValue}\n                            margin=\"dense\"\n                            onChange={handleMinuteInputChange}\n                            onBlur={handleMBlur}\n                            inputProps={{\n                                step: 1,\n                                min: 0,\n                                max: 60,\n                                type: \"number\"\n                            }}\n                        />\n                        <br />\n                        <br />\n                        <br />\n                        <Typography variant=\"overline\">Seconds</Typography>\n                        <Slider\n                            value={\n                                typeof secondsValue === \"number\"\n                                    ? secondsValue\n                                    : 0\n                            }\n                            onChange={handleSecondSliderChange}\n                            max=\"60\"\n                        />\n                        <Input\n                            className={props.styleRefs.input}\n                            value={secondsValue}\n                            margin=\"dense\"\n                            onChange={handleSecondInputChange}\n                            onBlur={handleBlur}\n                            inputProps={{\n                                step: 1,\n                                min: 0,\n                                max: 60,\n                                type: \"number\"\n                            }}\n                        />\n                        <br />\n                        <br />\n                        <br />\n                        <Typography variant=\"overline\">\n                            Completion Sound\n                        </Typography>\n                        <form autoComplete=\"off\">\n                            <Select onChange={handleSoundChange} value={sound}>\n                                {listOfVideos}\n                            </Select>\n                        </form>\n                        <br />\n                    </div>\n                </Grid>\n                <br />\n                <Button\n                    variant=\"contained\"\n                    startIcon={<Clock />}\n                    onClick={toggleRunStatus}\n                    disabled={\n                        /* eslint-disable */\n                        !isTimerRunning &&\n                        minutesValue == 0 &&\n                        secondsValue == 0\n                        /* eslint-enable */\n                    }\n                    color={isTimerRunning ? \"secondary\" : \"primary\"}\n                >\n                    {isTimerRunning ? \"Stop!\" : \"Begin!\"}\n                </Button>\n                <br />\n            </div>\n            <br />\n            <LoadableSound\n                data={sound}\n                show={\n                    // eslint-disable-next-line\n                    isTimerRunning && secondsValue <= 3 && minutesValue == 0\n                }\n            />\n        </Paper>\n    )\n}\n","/**\n * Copyright 2019-present Reece Dunham\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","/**\n * Copyright 2019-present Reece Dunham\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport MainContainer from \"./components/MainContainer\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\nimport red from \"@material-ui/core/colors/red\"\nimport green from \"@material-ui/core/colors/green\"\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\"\n\nexport default props => {\n    const isHoliday = false\n    const holidayMessage = (\n        <Typography color=\"primary\" variant=\"body2\">\n        </Typography>\n    )\n\n    const holidayTheme = createMuiTheme({\n        palette: {\n            primary: red,\n            secondary: green\n        }\n    })\n\n    const classes = makeStyles(theme => ({\n        title: {\n            flexGrow: 1.01\n        },\n        input: {\n            width: 42\n        },\n        small: {\n            width: 250\n        }\n    }))()\n\n    let component = (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Reece's Cool Timer\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <MainContainer styleRefs={classes} hMessage={holidayMessage} />\n        </div>\n    )\n\n    return isHoliday ? (\n        <ThemeProvider theme={holidayTheme}>\n            {component}    \n        </ThemeProvider>\n    ) : component\n}\n"],"sourceRoot":""}